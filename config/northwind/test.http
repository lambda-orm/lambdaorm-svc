@host=http://localhost:9291
@stage=default
@query=Orders.filter(p => p.id === id).include(p => [p.customer.map(p => p.name), p.details.include(p => p.product.include(p => p.category.map(p => p.name)).map(p => p.name)).map(p => [p.quantity, p.unitPrice])])
@data={"id": 10248 }


### General -------------------------------------------------------------------------------------------------------------------------

### ping
GET {{host}}/ping HTTP/1.1

### health
GET {{host}}/health HTTP/1.1

### metrics
GET {{host}}/metrics HTTP/1.1

### Schema  -------------------------------------------------------------------------------------------------------------------------

### entities
GET {{host}}/entities HTTP/1.1
content-type: application/json

### entity
GET {{host}}/entities/Orders HTTP/1.1
content-type: application/json

### stages
GET {{host}}/stages HTTP/1.1
content-type: application/json

### stage
GET {{host}}/stages/default HTTP/1.1
content-type: application/json

### queries -------------------------------------------------------------------------------------------------------------------------

### Model
POST {{host}}/model HTTP/1.1
content-type: application/json

{	
	"query": "{{query}}"
}

### Parameters
POST {{host}}/parameters HTTP/1.1
content-type: application/json

{	
	"query": "{{query}}"
}

### Constraints
POST {{host}}/constraints HTTP/1.1
content-type: application/json

{	
	"query": "{{query}}"
}

### Plan
POST {{host}}/plan HTTP/1.1
content-type: application/json

{
	"options": { "stage": "{{stage}}" },
	"query": "{{query}}"
}

### Execute
POST {{host}}/execute HTTP/1.1
content-type: application/json

{
	"options": { "stage": "{{stage}}" },
	"query": "{{query}}",
	"data":{{data}}
}