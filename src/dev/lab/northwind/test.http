@host = http://localhost:9292
@stage = default
@expression=Orders.filter(p => p.id === id).include(p => [p.customer.map(p => p.name), p.details.include(p => p.product.include(p => p.category.map(p => p.name)).map(p => p.name)).map(p => [p.quantity, p.unitPrice])])
@data={"id": 2 }

### General -------------------------------------------------------------------------------------------------------------------------

### ping
GET {{host}}/api/ping HTTP/1.1

### health
GET {{host}}/api/health HTTP/1.1

### metrics
GET {{host}}/api/metrics HTTP/1.1

### Schema  -------------------------------------------------------------------------------------------------------------------------

### entities
GET {{host}}/api/entities HTTP/1.1
content-type: application/json

### entity
GET {{host}}/api/entities/Orders HTTP/1.1
content-type: application/json

### stages
GET {{host}}/api/stages HTTP/1.1
content-type: application/json

### stage
GET {{host}}/api/stages/PostgreSQL HTTP/1.1
content-type: application/json

### Expressions -------------------------------------------------------------------------------------------------------------------------

### Model
POST {{host}}/api/model HTTP/1.1
content-type: application/json

{	
	"expression": "{{expression}}"
}

### Parameters
POST {{host}}/api/parameters HTTP/1.1
content-type: application/json

{	
	"expression": "{{expression}}"
}

### Constraints
POST {{host}}/api/constraints HTTP/1.1
content-type: application/json

{	
	"expression": "{{expression}}"
}

### Sentence
POST {{host}}/api/sentence HTTP/1.1
content-type: application/json

{
	"options": { "stage": "{{stage}}" },
	"expression": "{{expression}}"
}

### ExecutePmIndividuals.filter(p=> p.gender == gender).include(p->p.party)
POST {{host}}/api/execute HTTP/1.1
content-type: application/json

{
	"options": { "stage": "{{stage}}" },
	"expression": "{{expression}}",
	"data":{{data}}
}