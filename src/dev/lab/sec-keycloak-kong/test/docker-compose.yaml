version: "3"
services:
  kong-db:
    image: postgres:11-alpine
    volumes:
      - db-data-kong-postgres:/var/lib/postgresql/data
    networks:
      - kong-net
    ports:
      - "15432:5432"
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
  kong-migration:
    image: kong
    depends_on:
      - kong-db
    container_name: kong-migration
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
    command: kong migrations bootstrap
    # healthcheck:
    #   test: ["CMD", "pg_isready", "-U", "kong"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 5
  kong:
    image: kong
    container_name: kong
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_PORT: 5432
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
      LC_CTYPE: en_US.UTF-8
      LC_ALL: en_US.UTF-8
      # - KONG_CASSANDRA_CONTACT_POINTS=kong-db
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    restart: on-failure
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    links:
      - kong-db:kong-db
    networks:
      - kong-net
    depends_on:
      - kong-migration
  konga:
    image: pantsel/konga
    ports:
      - 1337:1337
    links:
      - kong:kong
    container_name: konga
    networks:
      - kong-net
    environment:
      - NODE_ENV=production
volumes:
  db-data-kong-postgres:
networks:
  kong-net:
    external: false
